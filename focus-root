#!/usr/bin/env perl -w

#
# This program is meant to help me focus, by blocking timewasting sites in /etc/hosts.
#
# If the program is invoked with 'focus on', a section will be added to the /etc/hosts file
# routing requests for the domains in __DATA__ to localhost.
#
# If the program is invoked with 'focus off', that section will be removed, but it will first
# wait for 60 seconds.  So there is no instant gratification if you just *have* to post to
# Facebook or whatever. You can press any key to turn focus back on. After 60 minutes, focus
# will automatically go back to on.
#
# The section in /etc/hosts should be apparently updated in place. It should begin with the line "# FOCUS"
# and, optionally, end with the line "# ENDFOCUS"
#

use strict;

use File::Temp qw/tempfile/;
use POSIX qw/strftime/;

my $hostFileName = "/etc/hosts";

sub usage {
  die "Usage: $0 [on|off]\n";
}

# note, sometimes @$domains = []
sub printFocusSection {
  my ($outFh, $domainSpecs) = @_;
  print $outFh "# FOCUS\n";
  for my $domainSpec (@$domainSpecs) {
    for my $subDomain ('', 'www.') {
      my $domain = $subDomain . $domainSpec;
      # need to specify it twice; on MacOS X, will wait for the IPv6 lookup to time out
      for my $ip ('127.0.0.1', 'fe80::1%lo0') {
	print $outFh "$ip $domain\n";
      }
    }
  }
  print $outFh "# ENDFOCUS\n";
}

sub getDomainSpecs {
  my $excludeRegex = shift;
  my @domainSpecs;
  my $dataPos = tell DATA; # saved position
  while (<DATA>) {
    if ($excludeRegex) {
      next if /$excludeRegex/;
    }
    chomp;
    push @domainSpecs, $_;
  }
  seek DATA, $dataPos, 0; # seek to the beginning so we can read it again
  return \@domainSpecs;
}

sub rewriteHostsFile {
  my $excludeRegex = shift;

  my $domainSpecs = getDomainSpecs($excludeRegex);

  my ($outFh, $outFileName) = tempfile();

  open my $inFh, "<", $hostFileName or die $!;
  my $isReadingFocusSection = 0;
  my $isFocusSectionPrinted = 0;
  while (my $line = <$inFh>) {
    if ($line =~ /^# FOCUS/) {
      printFocusSection($outFh, $domainSpecs);
      $isFocusSectionPrinted = 1;
      $isReadingFocusSection = 1;
      next;
    }
    if ($line =~ /^# ENDFOCUS/) {
      $isReadingFocusSection = 0;
      next;
    }
    if (!$isReadingFocusSection) {
      print $outFh $line;
    }
  }

  if (!$isFocusSectionPrinted) {
    printFocusSection($outFh, $domainSpecs);
  }

  chmod 0644, $outFileName or die $!;
  rename $outFileName, $hostFileName or die $!;

}

if (@ARGV < 1) {
  usage();
}


my $type = $ARGV[0];
if ($type eq "on") {
  rewriteHostsFile(undef);
  # do nothing. By default, will create entries for all domains, with no exclusions
} elsif ($type eq "off") {
  rewriteHostsFile('.');
} else {
  usage();
}

exit 0;


__DATA__
9gag.com
cracked.com
digg.com
ello.co
facebook.com
hulu.com
imgur.com
lifehacker.com
loseit.com
medium.com
netflix.com
news.ycombinator.com
nytimes.com
okcupid.com
overcomingbias.com
producthunt.com
quora.com
reddit.com
techcrunch.com
theonion.com
tvtropes.com
twitter.com
wired.com
xkcd.com
ycombinator.com
youtube.com
